# Python program to exploit vuln.c for Assessment 2

# Create a Python 'harness' that will execute the vulnerable program
# and exploit the vulnerability.

# The core of this exploit should be shellcode written in
# assembly and 'objdump' used to put the shellcode in Python.

# Will most likely use a ROP method. (as NX protected)

# Need to decide what vulnerability to exploit.  
# Some options:
# - Call a hidden function (maybe too trivial though)
# - Call /bash/sh - reverse TCP but locally to prove functionality
#      but not worry about needing to submit code that needs 
#      modifying to run.
# - ret2libc and ROP with ASLR and NX enabled?


# To Do before submitting:
# - Insert original Assembly in Python script as comments.
# - explain method being used and instructions for use.

# Questions to answer
# - Will memory addresses of system ROP Gadgets be the same 
#      between systems - since we know the base system?



import struct

